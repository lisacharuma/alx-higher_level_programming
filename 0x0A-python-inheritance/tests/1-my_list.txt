Tests file for 1-my_list.py
===================================================================

Test 0: The module can be imported
>>> MyList = __import__('1-my_list').MyList
>>>
===================================================================

Test 1: This is a test case in which the module behaves as expected
The output is list sorted in ascending order and the case uses the
given main file as the test case

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]
>>>

====================================================================
Test 2: It also works well with a normal list
This contains both positive and negative numbers

>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(-2)
>>> my_list.append(-8)
>>> my_list.append(-4)
>>> my_list.append(7)
>>> my_list.append(2)
>>> my_list.print_sorted()
[-8, -4, -2, 2, 7]
>>>

==================================================================
Test 3: An existing list is passed as an oject
It also behaves the same when an existing list is passed as an object

>>> units = [3, 6, 1]
>>> list1 = MyList(units)
>>> list1.print_sorted()
[1, 3, 6]
>>>

==================================================================
Test 4: If an empty list is passed it returns an empty list

>>> empty_list = []
>>> my_list = MyList(empty_list)
>>> my_list.print_sorted()
[]
>>>

==================================================================
Test 5: When called on an object that is not defined, it throws an error

>>> MyList = __import__('1-my_list').MyList
>>> test_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'test_list' is not defined
>>>

===================================================================
Test 6: When called directly on an object of the parent class, it throws
an error

>>> test_list = [1, 17, 10]
>>> test_list.print_sorted()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'print_sorted'
>>>

==================================================================
Test 7: If one number is passed repeatedly as an element of MyList obj
it works well because lists allow duplicates

>>> test_list = MyList()
>>> test_list.append(3)
>>> test_list.append(3)
>>> test_list.append(3)
>>> test_list.append(3)
>>> test_list.print_sorted()
[3, 3, 3, 3]
>>>

================================
